<template>
  <!--pages/databaseGuide/databaseGuide.wxml-->
<view class="container">

  <!-- 导航 -->
  <view class="list">
    <view class="list-item">
      <text class="request-text">数据库指引</text>
    </view>
    <view class="list-item">
      <text class="request-text" c-for="{{7}}" style="color: {{step === index + 1 ? 'red': 'black'}}">{{index + 1}}</text>
    </view>
    <view class="list-item" c-if="{{openid}}">
      <text class="request-text">openid：{{openid}}</text>
    </view>
    <view class="list-item" c-if="{{counterId}}">
      <text class="request-text">当前记录 ID：{{counterId}}</text>
    </view>
  </view>

  <!-- 快速操作数据库指引 -->

  <!-- 简介 -->
  <view class="guide" c-if="{{step === 1}}">
    <text class="headline">示例介绍</text>
    <text class="p">1. 以计数器为例，在此演示如何操作数据库</text>
    <text class="p">2. 数据库操作大多需要用户 openid，需先配置好 login 云函数，如已配置好，点击下一步，获取用户 openid 并开始我们的指引</text>
    <view class="nav">
      <button class="next" size="mini" type="default" c-bind:tap="nextStep" text="下一步"></button>
    </view>
  </view>

  <!-- 新建集合 -->
  <view class="guide" c-if="{{step === 2}}">
    <text class="headline">新建集合</text>
    <text class="p">1. 打开云开发控制台，进入到数据库管理页</text>
    <image class="image1" src="{{imgSrc}}" ></image>
    <text class="p">2. 选择添加集合，集合名为 counters</text>
    <image class="flat-image" src="{{collectionSrc}}"></image>
    <text class="p">3. 可以看到 counters 集合出现在左侧集合列表中</text>
    <text class="p">注：集合必须在云开发控制台中创建</text>

    <view class="nav">
      <button class="prev" size="mini" type="default" c-bind:tap="prevStep" text="上一步">
       
      </button>
      <button class="next" size="mini" type="default" c-bind:tap="nextStep" text="下一步">
      </button>
    </view>
  </view>

  <!-- 新增记录 -->
  <view class="guide" c-if="{{step === 3}}">
    <text class="headline">新增记录</text>
    <text class="p">1. 打开 pages/databaseGuide/databaseGuide.js 文件，定位到 onAdd 方法</text>
    <text class="p">2. onAdd 内容如下</text>
    <image class="code-image" src="{{addSrc}}"></image>
    <text class="p">2. onAdd 方法会往 counters 集合新增一个记录，新增如下格式的一个 JSON 记录</text>
    <text class="code">
  
    </text>
    <text class="p">3. 点击按钮</text>
    <button size="mini" type="default" c-bind:tap="onAdd"><text>新增记录</text></button>
    <text class="p" c-if="{{counterId}}">新增的记录 _id 为：{{counterId}}</text>
    <text class="p">4. 在云开发 -> 数据库 -> counters 集合中可以看到新增的记录</text>

    <view class="nav">
      <button class="prev" size="mini" type="default" c-bind:tap="prevStep" text='上一步'>

      </button>
      <button class="next" size="mini" type="default" c-bind:tap="nextStep" c-if="{{counterId}}"
      text="下一步"
      ></button>
    </view>
  </view>

  <!-- 查询记录 -->
  <view class="guide" c-if="{{step === 4}}">
    <text class="headline">查询记录</text>
    <text class="p">1. 打开 pages/databaseGuide/databaseGuide.js 文件，定位到 onQuery 方法</text>
    <text class="p">2. onQuery 方法会在下方按钮被点击时触发</text>
    <image class="code-image" src="{{querySrc}}" ></image>
    <text class="p">3. 点击按钮</text>
    <button size="mini" type="default" c-bind:tap="onQuery" text="查询记录"></button>
    <text class="code" c-if="{{queryResult}}">{{queryResult}}</text>

    <view class="nav">
      <button class="prev" size="mini" type="default" c-bind:tap="prevStep" text="上一步"></button>
      <button class="next" size="mini" type="default" c-bind:tap="nextStep" text="下一步"></button>
    </view>
  </view>

  <!-- 更新记录 -->
  <view class="guide" c-if="{{step === 5}}">
    <text class="headline">更新记录</text>
    <text class="p">1. 打开 pages/databaseGuide/databaseGuide.js 文件，定位到 onCounterInc 和 onCounterDec 方法</text>
    <text class="p">2. onCounterDec如下</text>
    <image class="code-image" src="{{dbSrc}}" ></image>
    <text class="p">3. 点击下方按钮更新计数器</text>
    <view class="counter">
      <button class="minus" size="mini" type="default" c-bind:tap="onCounterDec" text="-"></button>
      <text class="p">{{count}}</text>
      <button class="plus" size="mini" type="default" c-bind:tap="onCounterInc" text="+"></button>
    </view>

    <view class="nav">
      <button class="prev" size="mini" type="default" c-bind:tap="prevStep" text="上一步"></button>
      <button class="next" size="mini" type="default" c-bind:tap="nextStep" text="下一步"></button>
    </view>
  </view>

  <!-- 删除记录 -->
  <view class="guide" c-if="{{step === 6}}">
    <text class="headline">删除记录</text>
    <text class="p">1. 打开 pages/databaseGuide/databaseGuide.js 文件，定位到 onRemove 方法</text>
    <text class="p">2. onRemove如下</text>
    <image class="code-image" src="" mode="aspectFit"></image>
    <text class="p">3. 点击下方按钮删除计数器</text>
    <button size="mini" type="default" c-bind:tap="onRemove" text="删除记录"></button>

    <view class="nav">
      <button class="prev" size="mini" type="default" c-bind:tap="prevStep" c-if="{{counterId}}" text="上一步"></button>
      <button class="next" size="mini" type="default" c-bind:tap="nextStep" text="下一步"></button>
    </view>
  </view>

  <!-- 结语 -->
  <view class="guide" c-if="{{step === 7}}">
    <text class="headline">完成指引 !</text>
    <text class="p">恭喜你，至此已完成数据库操作入门基础，可以点击调试器中的链接，查看详尽的数据库文档</text>

    <view class="nav">
      <button class="prev" size="mini" type="default" c-bind:tap="prevStep" text="上一步"></button>
      <button class="next" size="mini" type="default" c-bind:tap="goHome" text="回到首页"></button>
    </view>
  </view>

</view>
</template>

<script>
import store from '../../store/index.js';
import common from '../../components/common/cloud.interface'
import cml from 'chameleon-api';
let cloud = common.getCloud();
class DataBase   {

  data = {
    step: 1,
    counterId: '',
    // openid: '',
    count: null,
    queryResult: '',
    imgSrc:require('../../assets/images/console-entrance.png'),
    collectionSrc:require('../../assets/images/create-collection.png'),
    addSrc:require('../../assets/images/code-db-onAdd.png'),
    querySrc:require('../../assets/images/code-db-onQuery.png'),
    dbSrc:require('../../assets/images/code-db-inc-dec.png'),
    dbRemoveSrc:require('../../assets/images/code-db-onRemove.png')
  }

  computed = {
    ...store.mapState({
      openid:state => state.openid
    })
  }

  watch  = {
  }

  methods = {
    nextStep: function () {
    // 在第一步，需检查是否有 openid，如无需获取
      if (this.step === 1 && !this.openid) {
        cloud.callFunction({
          name: 'login',
          data: {},
          success: res => {
            store.commit('getOpenId',res.result)
            this.step = 2;
          },
          fail: err => {
            console.log('[云函数] [login] 获取 openid 失败，请检查是否有部署云函数，错误信息：', err)
          }
        })
      } else {
        const callback = this.step !== 6 ? function() {} : function() {
          console.group('数据库文档')
          console.log('https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/database.html')
        }

        this.step = this.step + 1;
      }
    },
    prevStep: function () {
      // this.setData({
      //   step: this.data.step - 1
      // })
      this.step = this.step - 1;
    },
    goHome(){
      cml.navigateTo({
        path:'/pages/index/index'
      })
    },
    onAdd(){
      const db = cloud.database()
      db.collection('counters').add({
        data: {
          count: 1
        },
        success: res => {
          // 在返回结果中会包含新创建的记录的 _id
          // this.setData({
          //   counterId: res._id,
          //   count: 1
          // })
          this.counterId = res._id,
          this.count = 1;
          console.log('[数据库] [新增记录] 成功，记录 _id: ', res._id)
        },
        fail: err => {
          console.error('[数据库] [新增记录] 失败：', err)
        }
      })
    },
    onQuery: function() {
      const db = cloud.database()
      // 查询当前用户所有的 counters
      db.collection('counters').where({
        _openid: this.openid
      }).get({
        success: res => {
          // this.setData({
          //   queryResult: JSON.stringify(res.data, null, 2)
          // })
          this.queryResult = JSON.stringify(res.data, null, 2);
          console.log('[数据库] [查询记录] 成功: ', res)
        },
        fail: err => {
          console.error('[数据库] [查询记录] 失败：', err)
        }
      })
    },
    onCounterDec(){
      const db = cloud.database()
      const newCount = this.count - 1
      db.collection('counters').doc(this.counterId).update({
        data: {
          count: newCount
        },
        success: res => {
          // this.setData({
          //   count: newCount
          // })
          this.count = newCount
        },
        fail: err => {
          icon: 'none',
          console.error('[数据库] [更新记录] 失败：', err)
        }
      })
    },
    onCounterInc: function() {
      const db = cloud.database()
      const newCount = this.count + 1
      db.collection('counters').doc(this.counterId).update({
        data: {
          count: newCount
        },
        success: res => {
          // this.setData({
          //   count: newCount
          // })
          this.count = newCount;
        },
        fail: err => {
          icon: 'none',
          console.error('[数据库] [更新记录] 失败：', err)
        }
      })
    },

    onRemove: function() {
      if (this.counterId) {
        const db = cloud.database()
        db.collection('counters').doc(this.counterId).remove({
          success: res => {
            console.log('删除成功')
            // this.setData({
            //   counterId: '',
            //   count: null,
            // })
            this.countId = '';
            this.count = null
          },
          fail: err => {
            console.error('[数据库] [删除记录] 失败：', err)
          }
        })
      } else {
        // wx.showToast({
        //   title: '无记录可删，请见创建一个记录',
        // })
        console.log()
      }
    },

  }

  beforeCreate(query) {
  }

  created(query) {
  }

  beforeMount(query) {
  }

  onShow() {
  }

  mounted() {
  }

  onHide() {
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new DataBase();
</script>

<style>
/* pages/databaseGuide/databaseGuide.wxss */

@import "../../style/guide.css";

</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {}
  },
  "qq": {
    "navigationBarTitleText": "index",
    "backgroundTextStyle": "dark",
    "backgroundColor": "#E2E2E2"
  },
  "wx": {
    "navigationBarTitleText": "index",
    "backgroundTextStyle": "dark",
    "backgroundColor": "#E2E2E2"
  },
  "alipay": {
    "defaultTitle": "index",
    "pullRefresh": false,
    "allowsBounceVertical": "YES",
    "titleBarColor": "#ffffff"
  },
  "baidu": {
    "navigationBarBackgroundColor": "#ffffff",
    "navigationBarTextStyle": "white",
    "navigationBarTitleText": "index",
    "backgroundColor": "#ffffff",
    "backgroundTextStyle": "dark",
    "enablePullDownRefresh": false,
    "onReachBottomDistance": 50
  }
}
</script>
